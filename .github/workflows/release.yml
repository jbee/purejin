name: Release

on:
  release:
    types: [ prereleased, released ]

env:
  GITHUB_TOKEN: ${{ github.token }}
  VERSION: ${{ github.event.release.tag_name }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
      - name: 'Set up JDK'
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: 'Build purejin ${{ env.VERSION }}'
        run: .bach/bin/bach --project-version ${VERSION} build
      - name: 'Upload artifact ${{ github.event.repository.name }}-build-${{ env.VERSION }}'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ env.VERSION }}
          path: |
            LICENSE
            .bach/workspace/logbook.md
            .bach/workspace/deploy
            .bach/workspace/documentation/*.zip
            .bach/workspace/modules

  deploy-to-releases:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Download build artifact ${{ env.VERSION }}'
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ env.VERSION }}
      - name: 'Release ${{ needs.setup.outputs.version }}'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          automatic_release_tag: ${{ env.VERSION }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          title: "purejin ${{ env.VERSION }}"
          files: |
            .bach/workspace/documentation/*.zip
            .bach/workspace/modules/se.jbee.lang@*.jar
            .bach/workspace/modules/se.jbee.inject@*.jar
            .bach/workspace/modules/se.jbee.inject.api@*.jar
            .bach/workspace/modules/se.jbee.inject.container@*.jar
            .bach/workspace/modules/se.jbee.inject.bind@*.jar
            .bach/workspace/modules/se.jbee.inject.bootstrap@*.jar
            .bach/workspace/modules/se.jbee.inject.action@*.jar
