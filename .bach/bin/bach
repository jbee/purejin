#!/usr/bin/env bash

if [[ $1 == 'init' ]]; then
  if [[ -z $2 ]]; then
    echo "Usage: bach init VERSION"
    exit 1
  fi
  jshell -R-Dbach-version="$2" https://git.io/bach-init
  exit $?
fi

if [ "`echo .bach/bin/*.jar`" == ".bach/bin/*.jar" ]; then
  if [[ -f '.bach/src/bach-init.java' ]]; then
    java .bach/src/bach-init.java
  elif [[ -f '.bach/bin/bach-init.version' ]]; then
    VERSION=$(<.bach/bin/bach-init.version)
    jshell -R-Dbach-version=$VERSION https://git.io/bach-init
  else
    echo "Usage: bach init VERSION"
    exit 1
  fi
fi

if [[ $1 == 'boot' ]]; then
  shift 1
  jshell --module-path .bach/bin --add-modules ALL-MODULE-PATH,ALL-SYSTEM .bach/bin/bach.jshell "$@"
  exit $?
fi

JAVA_LAUNCHER_ARGUMENTS=('--module-path=.bach/bin' '--add-modules=ALL-MODULE-PATH' '--add-modules=ALL-DEFAULT')

if [[ -f ".bach/src/$1.java" ]]; then
  PROGRAM=".bach/src/$1.java"
  shift 1
  java "${JAVA_LAUNCHER_ARGUMENTS[@]}" "$PROGRAM" "$@"
  exit $?
fi

if [[ -f "$1" ]]; then
  java "${JAVA_LAUNCHER_ARGUMENTS[@]}" "$@"
  exit $?
fi

java "${JAVA_LAUNCHER_ARGUMENTS[@]}" --module com.github.sormuras.bach "$@"
exit $?
